{"remainingRequest":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dinhphien/vuetify-material-dashboard/src/views/DetailedDepartments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dinhphien/vuetify-material-dashboard/src/views/DetailedDepartments.vue","mtime":1571805263827},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vuetify-loader/lib/loader.js","mtime":1570705111074},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1570705076596},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":1570705078980}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapState} from 'vuex'\nexport default {\n  data : () => ({\n    dialogBasicInfor: false,\n    dialogDetailedEmployee: false,\n    dialogAddEmployee: false,\n    headers: [\n      {\n        sortable: true,\n        text: 'Name Employee',\n        value: 'name'\n      },\n      {\n        sortable:true,\n        text: 'Owner',\n        value: 'Owner.name'\n\n      },\n      {\n        sortable:true,\n        text: 'Email',\n        value: 'email'\n\n      },\n      {\n        sortable:true,\n        text: 'Address',\n        value: 'address'\n\n      },\n      {\n        sortable:true,\n        text: 'Phone',\n        value: 'phoneNumber'\n\n      },\n      {\n        sortable:true,\n        text: 'Role',\n        value: 'Role.name'\n\n      },\n      { text: 'Managed Assets', \n        value: 'action', \n        sortable: false \n      },\n    ],\n    headersAssets: [\n      {\n        sortable: true,\n        text: 'Asset Code',\n        value: 'assetCode'\n      },\n      {\n        sortable: true,\n        text: 'Asset Type',\n        value: 'AssetType.name'\n      },\n      {\n        sortable: true,\n        text: 'Purpose',\n        value: 'Purpose.name'\n      },\n      {\n        sortable:true,\n        text: 'Owner',\n        value: 'Owner.name'\n\n      },\n      {\n        sortable:true,\n        text: 'Manager',\n        value: 'Manager.name'\n\n      },\n      { text: 'Actions', \n        value: 'action', \n        sortable: false \n      },\n    ],\n    eidtedBasicRoom: {\n      name: \"\",\n      managerId: null,\n      id: null,\n    },\n     eidtedBasicRoomDefault: {\n      name: \"\",\n      managerId: null,\n      id: null,\n    },\n    addEmployeeItem: {\n      idRoom: null,\n      idEmployee: null,\n      idRole: null,\n    },\n    addEmployeeItemDefault: {\n      idRoom: null,\n      idEmployee: null,\n      idRole: null,\n    }\n\n  }),\n  mounted () {\n    \n  },\n  created(){\n\n  },\n\n  computed : {\n    detailedDevice() {\n\n    },\n    ...mapState({\n      departments: 'Departments',\n      detailedDepartment: 'detailedDepartment',\n      detailedAssetsEmployee: 'detailedAssetsEmployee',\n      user: 'user',\n      employeeCandidates: 'employeeCandidates',\n      roles: 'Roles',\n    }),\n\n\n  },\n  beforeCreate(){\n    this.$store.dispatch(\"getDetailedDepartmentDB\", this.$store.state.detailedDepartmentId)\n    this.$store.dispatch('getEmployeeCandidates')\n    this.$store.dispatch(\"getRolesDB\")\n  },\n  created(){\n    if(this.user.isDepartmentManager !=='true' && this.user.isAdmin !=='true'){\n      this.headersAssets.splice(this.headersAssets.length-1, 1)\n      console.log(this.headersAssets)\n    }\n  },\n\n  methods: {\n    cancel(){\n      Object.assign(this.eidtedBasicRoom, this.eidtedBasicRoomDefault)\n      this.dialogBasicInfor = false\n\n    },\n    save(){\n      this.eidtedBasicRoom.id = this.detailedDepartment.id\n      let updateInforRoom = Object.assign({}, this.eidtedBasicRoom)\n\n      this.$store.dispatch(\"updateBasicInforDepartment\", updateInforRoom)\n      this.cancel()\n    },\n    update(){\n      this.eidtedBasicRoom.name = this.detailedDepartment.name\n      if(this.detailedDepartment.Manager){\n        this.eidtedBasicRoom.managerId = this.detailedDepartment.Manager.id\n        console.log(this.detailedDepartment.Manager.id)\n      }\n      this.dialogBasicInfor = true\n\n    },\n    openManagedAssets(item){\n      console.log(item.id)\n      let idEmployee = item.id\n      this.$store.dispatch('getManagedAssetsEmployee', idEmployee) \n      this.dialogDetailedEmployee = true\n    },\n    openDetailAsset(item){\n      this.$store.commit('changeDetailedAsset', item)\n      this.$router.push({ name: 'detailed-assets'})\n    },\n    cancelDialogAddEmployee(){\n      Object.assign(this.addEmployeeItem, this.addEmployeeItemDefault)\n      this.dialogAddEmployee = false\n\n    },\n    saveDialogAddEmployee(){\n      this.addEmployeeItem.idRoom = this.$store.state.detailedDepartmentId\n      let addItem = Object.assign({}, this.addEmployeeItem)\n      console.log(addItem)\n      this.$store.dispatch(\"addEmployeetoDepartment\", addItem)\n      this.cancelDialogAddEmployee()\n    },\n    removeEmployee(item){\n      let removeItem = {idRoom: item.departmentId, idEmployee: item.id}\n      this.$store.dispatch('removeEmployeeDepartment', removeItem)\n      \n    }\n\n  }\n\n\n}\n",{"version":3,"sources":["DetailedDepartments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"DetailedDepartments.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container\n    fill-height\n    fluid\n  >\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        md=\"8\"\n      >\n        <v-dialog v-model=\"dialogBasicInfor\" width = \"500\">\n          <v-card>\n            <v-card-title\n              class=\"headline grey lighten-2\"\n              primary-title\n            >\n              Update Basic Information\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-text-field v-model = \"eidtedBasicRoom.name\" label=\"Name Department\"></v-text-field>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"4\">\n                    <v-select\n                      v-model=\"eidtedBasicRoom.managerId\"\n                      :items=\"detailedDepartment.Employee\"\n                      label=\"Manager\"\n                      item-text = \"name\"\n                      item-value = \"id\"\n                      required\n                    ></v-select>\n                  </v-col>  \n                </v-row>\n              </v-container> \n            </v-card-text>\n            <v-card-actions class=\"justify-center\">\n              <v-btn color=\"blue darken-1\" text @click=\"cancel\">Cancel</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n        <material-card>\n          <v-card-title\n                class=\"headline green mx-auto d-block elevation-6\"\n                primary-title\n              >\n                Information\n              </v-card-title>\n          <v-card-text class=\"text-center\">\n            <v-row>\n              <v-col cols=\"4\">\n                <v-subheader>Name Department</v-subheader>\n              </v-col>\n              <v-col cols=\"8\">\n                <v-text-field\n                :value = \"detailedDepartment.name\"\n                ></v-text-field>\n              </v-col>\n              \n            </v-row>\n            <v-row>\n              <v-col cols=\"2\">\n                <v-subheader>Room Owner</v-subheader>\n              </v-col>\n              <v-col cols=\"4\" v-if = \"detailedDepartment.Owner\">\n                <v-text-field\n                :value = \"detailedDepartment.Owner.name\"\n\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"2\">\n                <v-subheader>Room Manager</v-subheader>\n              </v-col>\n              <v-col cols=\"4\" v-if = \"detailedDepartment.Manager\">\n                <v-text-field\n                :value = \"detailedDepartment.Manager.name\"\n                ></v-text-field>\n              </v-col> \n            </v-row>\n          </v-card-text>\n          <v-card-actions class=\"justify-center\">\n              <v-btn color=\"green\" @click=\"update\" v-if=\"user.isDepartmentManager ==='true' || user.isAdmin ==='true'\">Update</v-btn>\n            </v-card-actions>\n        </material-card>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        md=\"8\"\n      >\n        <v-dialog v-model=\"dialogAddEmployee\" width = \"500\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn color=\"primary\" dark class=\"mb-2\" v-on=\"on\" v-if=\"user.isDepartmentManager ==='true' || user.isAdmin ==='true'\">Add Employee</v-btn>\n          </template>\n          <v-card>\n            <v-card-title\n              class=\"headline grey lighten-2\"\n              primary-title\n            >\n              Add Employee\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <v-row>\n                 <v-col cols=\"6\">\n                    <v-select\n                      v-model = \"addEmployeeItem.idEmployee\"\n                      :items=\"employeeCandidates\"\n                      label=\"Employee\"\n                      item-text = \"name\"\n                      item-value = \"id\"\n                      required\n                    ></v-select>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-select\n                      v-model = \"addEmployeeItem.idRole\"\n                      :items=\"roles\"\n                      label=\"Role\"\n                      item-text = \"name\"\n                      item-value = \"id\"\n                      required\n                      :disabled= \"addEmployeeItem.idEmployee===null\"\n                    ></v-select>\n                  </v-col>\n                </v-row> \n              </v-container> \n            </v-card-text>\n            <v-card-actions class=\"justify-center\">\n              <v-btn color=\"blue darken-1\" text @click=\"cancelDialogAddEmployee\">Cancel</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"saveDialogAddEmployee\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n       <v-dialog v-model=\"dialogDetailedEmployee\" width = \"1000\">\n          <material-card\n            color=\"green\"\n            title=\"Managed Assets Table\"\n          >\n            <v-data-table\n              :headers=\"headersAssets\"\n              :items=\"detailedAssetsEmployee.Managed\"\n              :items-per-page=\"5\"\n            >\n              <template v-slot:item.action = \"{ item }\">\n                <v-btn\n                  icon\n                >\n                  <v-icon color=\"tertiary\" @click=\"openDetailAsset(item)\">\n                    mdi-apps\n                  </v-icon>\n                </v-btn>\n                \n              </template>\n            </v-data-table>\n          </material-card>\n        </v-dialog>\n        <material-card\n          color=\"green\"\n          title=\"Employees Table\"\n          text=\"\"\n        >\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"detailedDepartment.Employee\"\n            :items-per-page=\"5\"\n          >\n            <template v-slot:item.action = \"{ item }\">\n              <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"openManagedAssets(item)\">\n                  mdi-apps\n                </v-icon>\n              </v-btn>\n              <v-btn\n                icon\n                v-if=\"user.isDepartmentManager ==='true' || user.isAdmin ==='true'\"\n              >\n                <v-icon color=\"tertiary\" @click=\"removeEmployee(item)\">\n                  mdi-delete\n                </v-icon>\n              </v-btn>\n            </template>\n          </v-data-table>\n        </material-card>\n      </v-col>\n      \n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import { mapGetters, mapState} from 'vuex'\n  export default {\n    data : () => ({\n      dialogBasicInfor: false,\n      dialogDetailedEmployee: false,\n      dialogAddEmployee: false,\n      headers: [\n        {\n          sortable: true,\n          text: 'Name Employee',\n          value: 'name'\n        },\n        {\n          sortable:true,\n          text: 'Owner',\n          value: 'Owner.name'\n\n        },\n        {\n          sortable:true,\n          text: 'Email',\n          value: 'email'\n\n        },\n        {\n          sortable:true,\n          text: 'Address',\n          value: 'address'\n\n        },\n        {\n          sortable:true,\n          text: 'Phone',\n          value: 'phoneNumber'\n\n        },\n        {\n          sortable:true,\n          text: 'Role',\n          value: 'Role.name'\n\n        },\n        { text: 'Managed Assets', \n          value: 'action', \n          sortable: false \n        },\n      ],\n      headersAssets: [\n        {\n          sortable: true,\n          text: 'Asset Code',\n          value: 'assetCode'\n        },\n        {\n          sortable: true,\n          text: 'Asset Type',\n          value: 'AssetType.name'\n        },\n        {\n          sortable: true,\n          text: 'Purpose',\n          value: 'Purpose.name'\n        },\n        {\n          sortable:true,\n          text: 'Owner',\n          value: 'Owner.name'\n\n        },\n        {\n          sortable:true,\n          text: 'Manager',\n          value: 'Manager.name'\n\n        },\n        { text: 'Actions', \n          value: 'action', \n          sortable: false \n        },\n      ],\n      eidtedBasicRoom: {\n        name: \"\",\n        managerId: null,\n        id: null,\n      },\n       eidtedBasicRoomDefault: {\n        name: \"\",\n        managerId: null,\n        id: null,\n      },\n      addEmployeeItem: {\n        idRoom: null,\n        idEmployee: null,\n        idRole: null,\n      },\n      addEmployeeItemDefault: {\n        idRoom: null,\n        idEmployee: null,\n        idRole: null,\n      }\n\n    }),\n    mounted () {\n      \n    },\n    created(){\n\n    },\n\n    computed : {\n      detailedDevice() {\n\n      },\n      ...mapState({\n        departments: 'Departments',\n        detailedDepartment: 'detailedDepartment',\n        detailedAssetsEmployee: 'detailedAssetsEmployee',\n        user: 'user',\n        employeeCandidates: 'employeeCandidates',\n        roles: 'Roles',\n      }),\n\n\n    },\n    beforeCreate(){\n      this.$store.dispatch(\"getDetailedDepartmentDB\", this.$store.state.detailedDepartmentId)\n      this.$store.dispatch('getEmployeeCandidates')\n      this.$store.dispatch(\"getRolesDB\")\n    },\n    created(){\n      if(this.user.isDepartmentManager !=='true' && this.user.isAdmin !=='true'){\n        this.headersAssets.splice(this.headersAssets.length-1, 1)\n        console.log(this.headersAssets)\n      }\n    },\n\n    methods: {\n      cancel(){\n        Object.assign(this.eidtedBasicRoom, this.eidtedBasicRoomDefault)\n        this.dialogBasicInfor = false\n\n      },\n      save(){\n        this.eidtedBasicRoom.id = this.detailedDepartment.id\n        let updateInforRoom = Object.assign({}, this.eidtedBasicRoom)\n\n        this.$store.dispatch(\"updateBasicInforDepartment\", updateInforRoom)\n        this.cancel()\n      },\n      update(){\n        this.eidtedBasicRoom.name = this.detailedDepartment.name\n        if(this.detailedDepartment.Manager){\n          this.eidtedBasicRoom.managerId = this.detailedDepartment.Manager.id\n          console.log(this.detailedDepartment.Manager.id)\n        }\n        this.dialogBasicInfor = true\n\n      },\n      openManagedAssets(item){\n        console.log(item.id)\n        let idEmployee = item.id\n        this.$store.dispatch('getManagedAssetsEmployee', idEmployee) \n        this.dialogDetailedEmployee = true\n      },\n      openDetailAsset(item){\n        this.$store.commit('changeDetailedAsset', item)\n        this.$router.push({ name: 'detailed-assets'})\n      },\n      cancelDialogAddEmployee(){\n        Object.assign(this.addEmployeeItem, this.addEmployeeItemDefault)\n        this.dialogAddEmployee = false\n\n      },\n      saveDialogAddEmployee(){\n        this.addEmployeeItem.idRoom = this.$store.state.detailedDepartmentId\n        let addItem = Object.assign({}, this.addEmployeeItem)\n        console.log(addItem)\n        this.$store.dispatch(\"addEmployeetoDepartment\", addItem)\n        this.cancelDialogAddEmployee()\n      },\n      removeEmployee(item){\n        let removeItem = {idRoom: item.departmentId, idEmployee: item.id}\n        this.$store.dispatch('removeEmployeeDepartment', removeItem)\n        \n      }\n\n    }\n\n\n  }\n</script>\n"]}]}