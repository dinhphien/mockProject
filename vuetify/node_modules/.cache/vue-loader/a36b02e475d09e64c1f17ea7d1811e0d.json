{"remainingRequest":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dinhphien/vuetify-material-dashboard/src/views/AssetTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dinhphien/vuetify-material-dashboard/src/views/AssetTypes.vue","mtime":1571805268823},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vuetify-loader/lib/loader.js","mtime":1570705111074},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1570705076596},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":1570705078980}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapState} from 'vuex'\nexport default {\n  data: () => ({\n    \n    dialog: false,\n    headers: [\n      {\n        sortable: true,\n        text: 'Name AssetType',\n        value: 'name'\n      },\n      {\n        sortable:true,\n        text: 'Owner',\n        value: 'Employee.name'\n\n      },\n      { text: 'Actions', \n        value: 'action', \n        sortable: false \n      },\n    ],\n    editedIndex: -1,\n    editedAssetType: {\n      name: '',\n    },\n    defaultAssetType: {\n      name: '',\n    },\n  }),\n\n  computed: {\n    titleDialogAddNewAssetType() {\n      return this.editedIndex === -1 ? \"Add AssetType\" : 'Edit AssetType'\n    },\n    ...mapState({\n      devices: 'devicesArray',\n      roles: 'Roles',\n      assetTypes: 'AssetTypes',\n\n    }),\n\n  },\n  watch : {\n    devices : function() {\n\n    }\n  },\n  beforeCreate() {\n    this.$store.dispatch(\"getAssetTypesDB\")\n  },\n  mounted () {\n  },\n  methods: {\n    openDetail(selectedDevice){\n      this.$store.commit('changeDetailedDevice', selectedDevice)\n      this.$router.push({ name: 'detailed-devices'})\n\n    },\n\n    editItem(item) {\n      console.log(\" in editItem\")\n      this.editedIndex = this.assetTypes.indexOf(item)\n      console.log(this.editedIndex)\n      this.editedAssetType = Object.assign({}, item)\n      console.log(this.editedAssetType)\n      this.dialog = true\n      \n    },\n    deleteItem(item) {\n      this.$store.dispatch('deleteAssetTypeDB', item)\n    },\n    cancel () {\n      console.log(\"in cancel function\")\n      this.dialog = false\n      this.editedIndex = -1\n      Object.assign(this.editedAssetType, this.defaultAssetType)\n    },\n    save () {\n      if(this.editedIndex > -1){\n        // update the device\n        let item = {editedAssetType: this.editedAssetType, index: this.editedIndex}\n        this.$store.dispatch('editAssetTypeDB', item)\n      }else {\n        // create a new device\n        let item = Object.assign({}, this.editedAssetType)\n        this.$store.dispatch('addNewAssetTypetoDB', item)\n      }\n      this.cancel()\n    }\n  }\n}\n",{"version":3,"sources":["AssetTypes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AssetTypes.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container\n    fill-height\n    fluid\n    grid-list-xl\n  >\n    <v-row justify=\"center\">\n      <v-col cols=\"12\">\n        <v-dialog v-model=\"dialog\" width = \"500\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn color=\"primary\" dark class=\"mb-2\" v-on=\"on\">New AssetType</v-btn>\n          </template>\n          <v-card>\n            <v-card-title\n              class=\"headline grey lighten-2\"\n              primary-title\n            >\n              {{titleDialogAddNewAssetType}}\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-text-field v-model = \"editedAssetType.name\" label=\"Name\"></v-text-field>\n                </v-row> \n              </v-container> \n            </v-card-text>\n            <v-card-actions class=\"justify-center\">\n              <v-btn color=\"blue darken-1\" text @click=\"cancel\">Cancel</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n        <material-card\n          color=\"green\"\n          title=\"AssetTypes Table\"\n          text=\"\"\n        >\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"assetTypes\"\n            :items-per-page=\"5\"\n          >\n            <template v-slot:item.action = \"{ item }\">\n              <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"editItem(item)\">\n                  mdi-pencil\n                </v-icon>\n              </v-btn>\n              <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"deleteItem(item)\">\n                  mdi-delete\n                </v-icon>\n              </v-btn>\n            </template>\n          </v-data-table>\n        </material-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import { mapGetters, mapState} from 'vuex'\n  export default {\n    data: () => ({\n      \n      dialog: false,\n      headers: [\n        {\n          sortable: true,\n          text: 'Name AssetType',\n          value: 'name'\n        },\n        {\n          sortable:true,\n          text: 'Owner',\n          value: 'Employee.name'\n\n        },\n        { text: 'Actions', \n          value: 'action', \n          sortable: false \n        },\n      ],\n      editedIndex: -1,\n      editedAssetType: {\n        name: '',\n      },\n      defaultAssetType: {\n        name: '',\n      },\n    }),\n\n    computed: {\n      titleDialogAddNewAssetType() {\n        return this.editedIndex === -1 ? \"Add AssetType\" : 'Edit AssetType'\n      },\n      ...mapState({\n        devices: 'devicesArray',\n        roles: 'Roles',\n        assetTypes: 'AssetTypes',\n\n      }),\n\n    },\n    watch : {\n      devices : function() {\n  \n      }\n    },\n    beforeCreate() {\n      this.$store.dispatch(\"getAssetTypesDB\")\n    },\n    mounted () {\n    },\n    methods: {\n      openDetail(selectedDevice){\n        this.$store.commit('changeDetailedDevice', selectedDevice)\n        this.$router.push({ name: 'detailed-devices'})\n\n      },\n\n      editItem(item) {\n        console.log(\" in editItem\")\n        this.editedIndex = this.assetTypes.indexOf(item)\n        console.log(this.editedIndex)\n        this.editedAssetType = Object.assign({}, item)\n        console.log(this.editedAssetType)\n        this.dialog = true\n        \n      },\n      deleteItem(item) {\n        this.$store.dispatch('deleteAssetTypeDB', item)\n      },\n      cancel () {\n        console.log(\"in cancel function\")\n        this.dialog = false\n        this.editedIndex = -1\n        Object.assign(this.editedAssetType, this.defaultAssetType)\n      },\n      save () {\n        if(this.editedIndex > -1){\n          // update the device\n          let item = {editedAssetType: this.editedAssetType, index: this.editedIndex}\n          this.$store.dispatch('editAssetTypeDB', item)\n        }else {\n          // create a new device\n          let item = Object.assign({}, this.editedAssetType)\n          this.$store.dispatch('addNewAssetTypetoDB', item)\n        }\n        this.cancel()\n      }\n    }\n  }\n</script>\n"]}]}