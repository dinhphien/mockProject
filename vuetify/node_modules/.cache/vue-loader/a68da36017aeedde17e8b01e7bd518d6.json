{"remainingRequest":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dinhphien/vuetify-material-dashboard/src/views/Devices.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dinhphien/vuetify-material-dashboard/src/views/Devices.vue","mtime":1571459427901},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vuetify-loader/lib/loader.js","mtime":1570705111074},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1570705076596},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":1570705078980}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapState} from 'vuex'\nexport default {\n  data: () => ({\n    \n    dialog: false,\n    headers: [\n      {\n        sortable: true,\n        text: 'Name Employee',\n        value: 'name'\n      },\n      {\n        sortable: true,\n        text: 'Department',\n        value: 'Department.name'\n      },\n      {\n        sortable: true,\n        text: 'Role',\n        value: 'Role.name'\n      },\n      {\n        sortable:true,\n        text: 'Owner',\n        value: 'Owner.name'\n\n      },\n      { text: 'Actions', \n        value: 'action', \n        sortable: false \n      },\n    ],\n    editedIndex: -1,\n    editedEmployee: {\n      name: '',\n      email: '',\n      password: '',\n      address: '',\n      idCard: '',\n      phoneNumber: '',\n      isAdmin: true,\n      employeeRoleId: null,\n      departmentId: null\n\n    },\n    defaultEmployee: {\n      name: '',\n      email: '',\n      password: '',\n      address: '',\n      idCard: '',\n      phoneNumber: '',\n      isAdmin: true,\n      employeeRoleId: null,\n      departmentId: null\n    },\n  }),\n\n  computed: {\n    titleDialogAddNewEmployee() {\n      return this.editedIndex === -1 ? \"Add Employee\" : 'Edit Employee'\n    },\n    ...mapState({\n      devices: 'devicesArray',\n      roles: 'Roles',\n      departments: 'Departments',\n      employees: 'Employees'\n\n    }),\n\n  },\n  watch : {\n    devices : function() {\n\n    }\n  },\n  beforeCreate() {\n    this.$store.dispatch(\"getRolesDB\")\n    this.$store.dispatch(\"getDepartmentsDB\")\n    this.$store.dispatch(\"getEmployeesDB\")\n  },\n  mounted () {\n\n  },\n  methods: {\n    openDetail(selectedDevice){\n      this.$store.commit('changeDetailedDevice', selectedDevice)\n      this.$router.push({ name: 'detailed-devices'})\n\n    },\n    checkIsAdmin(isAdmin){\n      if(isAdmin){\n        this.editedEmployee.employeeRoleId = null\n        this.editedEmployee.departmentId = null\n      }\n    },\n\n    editItem(item) {\n      console.log(\" in editItem\")\n      this.editedIndex = this.employees.indexOf(item)\n      console.log(this.editedIndex)\n      this.editedEmployee = Object.assign({}, item)\n      console.log(this.editedEmployee)\n      this.dialog = true\n      \n    },\n    deleteItem(item) {\n      this.$store.dispatch('deleteEmployeeDB', item)\n    },\n    cancel () {\n      console.log(\"in cancel function\")\n      this.dialog = false\n      this.editedIndex = -1\n      Object.assign(this.editedEmployee, this.defaultEmployee)\n    },\n    save () {\n      if(this.editedIndex > -1){\n        // update the device\n        console.log(\"In save function Roles.vue\")\n        let item = {editedEmployee: this.editedEmployee, index: this.editedIndex}\n        this.$store.dispatch('editEmployeeDB', item)\n      }else {\n        // create a new device\n        //console.log(this.editedDevice)\n        let item = Object.assign({}, this.editedEmployee)\n        console.log(item)\n        this.$store.dispatch('addNewEmployeetoDB', item)\n      }\n      this.cancel()\n    }\n  }\n}\n",{"version":3,"sources":["Devices.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Devices.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container\n    fill-height\n    fluid\n    grid-list-xl\n  >\n    <v-row justify=\"center\">\n      <v-col cols=\"12\">\n       <!--  <v-dialog v-model=\"dialog\" width = \"500\"> -->\n         <v-dialog v-model=\"dialog\" width = \"800\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn color=\"primary\" dark class=\"mb-2\" v-on=\"on\">New Employee</v-btn>\n          </template>\n          <v-card>\n            <v-card-title\n              class=\"headline grey lighten-2\"\n              primary-title\n            >\n              {{titleDialogAddNewEmployee}}\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col cols=\"6\">\n                    <v-text-field v-model = \"editedEmployee.name\" label=\"Name\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-text-field v-model = \"editedEmployee.address\" label=\"Address\"></v-text-field>\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"6\">\n                    <v-text-field v-model = \"editedEmployee.email\" label=\"Email\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-text-field v-model = \"editedEmployee.password\" label=\"Password\"></v-text-field>\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"6\">\n                    <v-text-field v-model = \"editedEmployee.idCard\" label=\"IDCard\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-text-field v-model = \"editedEmployee.phoneNumber\" label=\"Phone Number\"></v-text-field>\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"3\">\n                    <v-checkbox\n                      v-model=\"editedEmployee.isAdmin\"\n                      label=\"isAdmin?\"\n                      required\n                      @change= \"checkIsAdmin\"\n                    ></v-checkbox>\n                  </v-col>\n                  <v-col cols=\"4\">\n                    <v-select\n                      v-model=\"editedEmployee.departmentId\"\n                      :items=\"departments\"\n                      :disabled= \"editedEmployee.isAdmin\"\n                      label=\"Department\"\n                      item-text = \"name\"\n                      item-value = \"id\"\n                      required\n                    ></v-select>\n                  </v-col>\n                  <v-col cols=\"4\">\n                    <v-select\n                      v-model=\"editedEmployee.employeeRoleId\"\n                      :items=\"roles\"\n                      :disabled= \"editedEmployee.isAdmin\"\n                      item-text = \"name\"\n                      item-value = \"id\"\n                      label=\"Role\"\n                      required\n                    ></v-select>\n                  </v-col>\n                </v-row>\n                <!-- <v-row>\n                  <v-text-field v-model = \"editedEmployee.phoneNumber\" label=\"Phone Number\" placeholder=\"0344.....\"></v-text-field>\n                </v-row> --> \n              </v-container> \n            </v-card-text>\n            <v-card-actions class=\"justify-center\">\n              <!-- <div class=\"flex-grow-1 justify-center\"></div> -->\n              <v-btn color=\"blue darken-1\" text @click=\"cancel\">Cancel</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n        <material-card\n          color=\"green\"\n          title=\"Employees Table\"\n          text=\"\"\n        >\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"employees\"\n            :items-per-page=\"5\"\n          >\n            <template v-slot:item.action = \"{ item }\">\n              <!-- <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"editItem(item)\">\n                  mdi-pencil\n                </v-icon>\n              </v-btn>\n              <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"deleteItem(item)\">\n                  mdi-delete\n                </v-icon>\n              </v-btn> -->\n              <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"openDetail(item)\">\n                  mdi-apps\n                </v-icon>\n              </v-btn>\n            </template>\n          </v-data-table>\n        </material-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import { mapGetters, mapState} from 'vuex'\n  export default {\n    data: () => ({\n      \n      dialog: false,\n      headers: [\n        {\n          sortable: true,\n          text: 'Name Employee',\n          value: 'name'\n        },\n        {\n          sortable: true,\n          text: 'Department',\n          value: 'Department.name'\n        },\n        {\n          sortable: true,\n          text: 'Role',\n          value: 'Role.name'\n        },\n        {\n          sortable:true,\n          text: 'Owner',\n          value: 'Owner.name'\n\n        },\n        { text: 'Actions', \n          value: 'action', \n          sortable: false \n        },\n      ],\n      editedIndex: -1,\n      editedEmployee: {\n        name: '',\n        email: '',\n        password: '',\n        address: '',\n        idCard: '',\n        phoneNumber: '',\n        isAdmin: true,\n        employeeRoleId: null,\n        departmentId: null\n\n      },\n      defaultEmployee: {\n        name: '',\n        email: '',\n        password: '',\n        address: '',\n        idCard: '',\n        phoneNumber: '',\n        isAdmin: true,\n        employeeRoleId: null,\n        departmentId: null\n      },\n    }),\n\n    computed: {\n      titleDialogAddNewEmployee() {\n        return this.editedIndex === -1 ? \"Add Employee\" : 'Edit Employee'\n      },\n      ...mapState({\n        devices: 'devicesArray',\n        roles: 'Roles',\n        departments: 'Departments',\n        employees: 'Employees'\n\n      }),\n\n    },\n    watch : {\n      devices : function() {\n  \n      }\n    },\n    beforeCreate() {\n      this.$store.dispatch(\"getRolesDB\")\n      this.$store.dispatch(\"getDepartmentsDB\")\n      this.$store.dispatch(\"getEmployeesDB\")\n    },\n    mounted () {\n\n    },\n    methods: {\n      openDetail(selectedDevice){\n        this.$store.commit('changeDetailedDevice', selectedDevice)\n        this.$router.push({ name: 'detailed-devices'})\n\n      },\n      checkIsAdmin(isAdmin){\n        if(isAdmin){\n          this.editedEmployee.employeeRoleId = null\n          this.editedEmployee.departmentId = null\n        }\n      },\n\n      editItem(item) {\n        console.log(\" in editItem\")\n        this.editedIndex = this.employees.indexOf(item)\n        console.log(this.editedIndex)\n        this.editedEmployee = Object.assign({}, item)\n        console.log(this.editedEmployee)\n        this.dialog = true\n        \n      },\n      deleteItem(item) {\n        this.$store.dispatch('deleteEmployeeDB', item)\n      },\n      cancel () {\n        console.log(\"in cancel function\")\n        this.dialog = false\n        this.editedIndex = -1\n        Object.assign(this.editedEmployee, this.defaultEmployee)\n      },\n      save () {\n        if(this.editedIndex > -1){\n          // update the device\n          console.log(\"In save function Roles.vue\")\n          let item = {editedEmployee: this.editedEmployee, index: this.editedIndex}\n          this.$store.dispatch('editEmployeeDB', item)\n        }else {\n          // create a new device\n          //console.log(this.editedDevice)\n          let item = Object.assign({}, this.editedEmployee)\n          console.log(item)\n          this.$store.dispatch('addNewEmployeetoDB', item)\n        }\n        this.cancel()\n      }\n    }\n  }\n</script>\n"]}]}