{"remainingRequest":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dinhphien/vuetify-material-dashboard/src/views/Assets.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dinhphien/vuetify-material-dashboard/src/views/Assets.vue","mtime":1571804856631},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vuetify-loader/lib/loader.js","mtime":1570705111074},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1570705076596},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":1570705078980}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapState} from 'vuex'\nexport default {\n  data: () => ({\n    \n    dialog: false,\n    headers: [\n      {\n        sortable: true,\n        text: 'Asset Code',\n        value: 'assetCode'\n      },\n      {\n        sortable: true,\n        text: 'Asset Type',\n        value: 'AssetType.name'\n      },\n      {\n        sortable: true,\n        text: 'Purpose',\n        value: 'Purpose.name'\n      },\n      {\n        sortable:true,\n        text: 'Owner',\n        value: 'Owner.name'\n\n      },\n      {\n        sortable:true,\n        text: 'Manager',\n        value: 'Manager.name'\n\n      },\n      { text: 'Actions', \n        value: 'action', \n        sortable: false \n      },\n    ],\n    editedIndex: -1,\n    editedAsset: {\n      id: null,\n      assetCode: '',\n      assetTypeId: null,\n      assetInfor: '',\n      assetPurposeId: null,\n      status: '',\n    },\n    defaultAsset: {\n      id: null,\n      assetCode: '',\n      assetTypeId: null,\n      assetInfor: '',\n      assetPurposeId: null,\n      status: '',\n    },\n    statuses: [\n      \"In use\",\n    ]\n  }),\n\n  computed: {\n    titleDialogAddNewAsset() {\n      return this.editedIndex === -1 ? \"Add Asset\" : 'Edit Asset'\n    },\n    ...mapState({\n      devices: 'devicesArray',\n      roles: 'Roles',\n      departments: 'Departments',\n      employees: 'Employees',\n      assetTypes: 'AssetTypes',\n      purposes: 'Purposes',\n      assets: 'Assets',\n\n    }),\n\n  },\n  watch : {\n    devices : function() {\n\n    }\n  },\n  beforeCreate() {\n    this.$store.dispatch(\"getRolesDB\")\n    this.$store.dispatch(\"getDepartmentsDB\")\n    this.$store.dispatch(\"getEmployeesDB\")\n    this.$store.dispatch(\"getAssetTypesDB\")\n    this.$store.dispatch(\"getPurposesDB\")\n    this.$store.dispatch(\"getAssetsDB\")\n  },\n  mounted () {\n\n  },\n  methods: {\n    openDetail(selectedAsset){\n      this.$store.commit('changeDetailedAsset', selectedAsset)\n      //console.log(this.$store.state.detailedAsset)\n      this.$router.push({ name: 'detailed-assets'})\n\n    },\n    editItem(item){\n      console.log(\" in editItem\")\n      this.editedIndex = this.assets.indexOf(item)\n      console.log(this.editedIndex)\n      this.editedAsset = Object.assign({}, item)\n      console.log(this.editedAsset)\n      this.dialog = true\n      \n    },\n    deleteItem(item) {\n      this.$store.dispatch('deleteAssetDB', item)\n    },\n    cancel () {\n      console.log(\"in cancel function\")\n      this.dialog = false\n      this.editedIndex = -1\n      Object.assign(this.editedAsset, this.defaultAsset)\n    },\n    save () {\n      if(this.editedIndex > -1){\n        // update the device\n        console.log(\"In save function Assets.vue\")\n        let updatedItem = {\n          id: this.editedAsset.id,\n          assetCode: this.editedAsset.assetCode,\n          assetTypeId:this.editedAsset.assetTypeId,\n          assetInfor: this.editedAsset.assetInfor,\n          assetPurposeId: this.editedAsset.assetPurposeId,\n          status: this.editedAsset.status,\n        }\n        let item = {editedAsset: updatedItem, index: this.editedIndex}\n        this.$store.dispatch('editAssetDB', item)\n      }else {\n        // create a new device\n        //console.log(this.editedDevice)\n        let item = Object.assign({}, this.editedAsset)\n        //console.log(item)\n        this.$store.dispatch('addNewAssettoDB', item)\n      }\n      this.cancel()\n    }\n  }\n}\n",{"version":3,"sources":["Assets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Assets.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container\n    fill-height\n    fluid\n    grid-list-xl\n  >\n    <v-row justify=\"center\">\n      <v-col cols=\"12\">\n         <v-dialog v-model=\"dialog\" width = \"800\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn color=\"primary\" dark class=\"mb-2\" v-on=\"on\">New Asset</v-btn>\n          </template>\n          <v-card>\n            <v-card-title\n              class=\"headline grey lighten-2\"\n              primary-title\n            >\n              {{titleDialogAddNewAsset}}\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col cols=\"6\">\n                    <v-text-field v-model = \"editedAsset.assetCode\" label=\"Asset Code\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-text-field v-model = \"editedAsset.assetInfor\" label=\"Asset Info\"></v-text-field>\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"4\">\n                    <v-select\n                      v-model=\"editedAsset.status\"\n                      :items=\"statuses\"\n                      label=\"Status\"\n                      required\n                    ></v-select>\n                  </v-col>\n                  <v-col cols=\"4\">\n                    <v-select\n                      v-model=\"editedAsset.assetTypeId\"\n                      :items=\"assetTypes\"\n                      label=\"AssetType\"\n                      item-text = \"name\"\n                      item-value = \"id\"\n                      required\n                    ></v-select>\n                  </v-col>\n                  <v-col cols=\"4\">\n                    <v-select\n                      v-model=\"editedAsset.assetPurposeId\"\n                      :items=\"purposes\"\n                      item-text = \"name\"\n                      item-value = \"id\"\n                      label=\"AssetPurpose\"\n                      required\n                    ></v-select>\n                  </v-col>\n                </v-row>\n              </v-container> \n            </v-card-text>\n            <v-card-actions class=\"justify-center\">\n              <v-btn color=\"blue darken-1\" text @click=\"cancel\">Cancel</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n        <material-card\n          color=\"green\"\n          title=\"Assets Table\"\n          text=\"\"\n        >\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"assets\"\n            :items-per-page=\"5\"\n          >\n            <template v-slot:item.action = \"{ item }\">\n              <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"editItem(item)\">\n                  mdi-pencil\n                </v-icon>\n              </v-btn>\n              <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"deleteItem(item)\">\n                  mdi-delete\n                </v-icon>\n              </v-btn>\n              <v-btn\n                icon\n              >\n                <v-icon color=\"tertiary\" @click=\"openDetail(item)\">\n                  mdi-apps\n                </v-icon>\n              </v-btn>\n            </template>\n          </v-data-table>\n        </material-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import { mapGetters, mapState} from 'vuex'\n  export default {\n    data: () => ({\n      \n      dialog: false,\n      headers: [\n        {\n          sortable: true,\n          text: 'Asset Code',\n          value: 'assetCode'\n        },\n        {\n          sortable: true,\n          text: 'Asset Type',\n          value: 'AssetType.name'\n        },\n        {\n          sortable: true,\n          text: 'Purpose',\n          value: 'Purpose.name'\n        },\n        {\n          sortable:true,\n          text: 'Owner',\n          value: 'Owner.name'\n\n        },\n        {\n          sortable:true,\n          text: 'Manager',\n          value: 'Manager.name'\n\n        },\n        { text: 'Actions', \n          value: 'action', \n          sortable: false \n        },\n      ],\n      editedIndex: -1,\n      editedAsset: {\n        id: null,\n        assetCode: '',\n        assetTypeId: null,\n        assetInfor: '',\n        assetPurposeId: null,\n        status: '',\n      },\n      defaultAsset: {\n        id: null,\n        assetCode: '',\n        assetTypeId: null,\n        assetInfor: '',\n        assetPurposeId: null,\n        status: '',\n      },\n      statuses: [\n        \"In use\",\n      ]\n    }),\n\n    computed: {\n      titleDialogAddNewAsset() {\n        return this.editedIndex === -1 ? \"Add Asset\" : 'Edit Asset'\n      },\n      ...mapState({\n        devices: 'devicesArray',\n        roles: 'Roles',\n        departments: 'Departments',\n        employees: 'Employees',\n        assetTypes: 'AssetTypes',\n        purposes: 'Purposes',\n        assets: 'Assets',\n\n      }),\n\n    },\n    watch : {\n      devices : function() {\n  \n      }\n    },\n    beforeCreate() {\n      this.$store.dispatch(\"getRolesDB\")\n      this.$store.dispatch(\"getDepartmentsDB\")\n      this.$store.dispatch(\"getEmployeesDB\")\n      this.$store.dispatch(\"getAssetTypesDB\")\n      this.$store.dispatch(\"getPurposesDB\")\n      this.$store.dispatch(\"getAssetsDB\")\n    },\n    mounted () {\n\n    },\n    methods: {\n      openDetail(selectedAsset){\n        this.$store.commit('changeDetailedAsset', selectedAsset)\n        //console.log(this.$store.state.detailedAsset)\n        this.$router.push({ name: 'detailed-assets'})\n\n      },\n      editItem(item){\n        console.log(\" in editItem\")\n        this.editedIndex = this.assets.indexOf(item)\n        console.log(this.editedIndex)\n        this.editedAsset = Object.assign({}, item)\n        console.log(this.editedAsset)\n        this.dialog = true\n        \n      },\n      deleteItem(item) {\n        this.$store.dispatch('deleteAssetDB', item)\n      },\n      cancel () {\n        console.log(\"in cancel function\")\n        this.dialog = false\n        this.editedIndex = -1\n        Object.assign(this.editedAsset, this.defaultAsset)\n      },\n      save () {\n        if(this.editedIndex > -1){\n          // update the device\n          console.log(\"In save function Assets.vue\")\n          let updatedItem = {\n            id: this.editedAsset.id,\n            assetCode: this.editedAsset.assetCode,\n            assetTypeId:this.editedAsset.assetTypeId,\n            assetInfor: this.editedAsset.assetInfor,\n            assetPurposeId: this.editedAsset.assetPurposeId,\n            status: this.editedAsset.status,\n          }\n          let item = {editedAsset: updatedItem, index: this.editedIndex}\n          this.$store.dispatch('editAssetDB', item)\n        }else {\n          // create a new device\n          //console.log(this.editedDevice)\n          let item = Object.assign({}, this.editedAsset)\n          //console.log(item)\n          this.$store.dispatch('addNewAssettoDB', item)\n        }\n        this.cancel()\n      }\n    }\n  }\n</script>\n"]}]}