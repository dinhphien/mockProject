{"remainingRequest":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dinhphien/vuetify-material-dashboard/src/components/core/Drawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dinhphien/vuetify-material-dashboard/src/components/core/Drawer.vue","mtime":1571803217910},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vuetify-loader/lib/loader.js","mtime":1570705111074},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1570705076596},{"path":"/home/dinhphien/vuetify-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":1570705078980}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// Utilities\n  import {\n    mapMutations,\n    mapState\n  } from 'vuex'\n\n  export default {\n    props: {\n      opened: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data: () => ({\n      linksAdmin: [\n        {\n          to: '/user-profile',\n          icon: 'mdi-account',\n          text: 'User Profile'\n        },\n        {\n          to: '/roles',\n          icon: 'mdi-clipboard-outline',\n          text: 'Roles'\n        },\n        {\n          to: '/assetTypes',\n          icon: 'mdi-clipboard-outline',\n          text: 'AssetTypes'\n        },\n        {\n          to: '/purposes',\n          icon: 'mdi-clipboard-outline',\n          text: 'Purposes'\n        },\n        {\n          to: '/departments',\n          icon: 'mdi-clipboard-outline',\n          text: 'Departments'\n        },\n        {\n          to: '/employees',\n          icon: 'mdi-clipboard-outline',\n          text: 'Employees'\n        },\n        {\n          to: '/Assets',\n          icon: 'mdi-clipboard-outline',\n          text: 'Assets'\n        },\n      ],\n      linksManager: [\n        {\n          to: '/user-profile',\n          icon: 'mdi-account',\n          text: 'User Profile'\n        },\n        {\n          to: '/detailed-departments',\n          icon: 'mdi-clipboard-outline',\n          text: 'Departments'\n        },\n      ],\n      links: [\n        {\n          to: '/user-profile',\n          icon: 'mdi-account',\n          text: 'User Profile'\n        },\n        {\n          to: '/detailed-departments',\n          icon: 'mdi-clipboard-outline',\n          text: 'Departments'\n        },\n      ]\n    }),\n\n    computed: {\n      ...mapState('app', ['image', 'color']),\n      user(){\n        return this.$store.state.user\n      },\n      inputValue: {\n        get () {\n          return this.$store.state.app.drawer\n        },\n        set (val) {\n          this.setDrawer(val)\n        }\n      }\n    },\n    mounted(){\n      this.$store.dispatch(\"readUserProfile\", this.$store.state.user.id)\n      if(this.$store.state.user.isAdmin ==='false'){\n        this.$store.commit('changeDetailedDepartmentId', this.$store.state.user.departmentId)\n      }\n\n    },\n    created(){\n      \n      //console.log(\"In drawer created\")\n      //console.log(typeof(this.$store.state.user.isAdmin))\n      \n    },\n\n    methods: {\n      ...mapMutations('app', ['setDrawer', 'toggleDrawer'])\n    }\n  }\n",{"version":3,"sources":["Drawer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"Drawer.vue","sourceRoot":"src/components/core","sourcesContent":["<template>\n  <v-navigation-drawer\n    id=\"app-drawer\"\n    v-model=\"inputValue\"\n    :src=\"image\"\n    app\n    color=\"grey darken-2\"\n    dark\n    floating\n    mobile-break-point=\"991\"\n    persistent\n    width=\"260\"\n  >\n    <template v-slot:img=\"attrs\">\n      <v-img\n        v-bind=\"attrs\"\n        gradient=\"to top, rgba(0, 0, 0, .7), rgba(0, 0, 0, .7)\"\n      />\n    </template>\n\n    <v-list-item two-line>\n      <v-list-item-avatar color=\"white\">\n        <v-img\n          src=\"https://cdn.vuetifyjs.com/images/logos/v.png\"\n          height=\"34\"\n          contain\n        />\n      </v-list-item-avatar>\n\n      <v-list-item-title class=\"title\">\n        VUETIFY MD\n      </v-list-item-title>\n    </v-list-item>\n\n    <v-divider class=\"mx-3 mb-3\" />\n\n    <v-list nav v-if=\"user.isAdmin ==='true'\">\n      <!-- Bug in Vuetify for first child of v-list not receiving proper border-radius -->\n      <div />\n\n      <v-list-item\n      \n      v-for=\"(link, i) in linksAdmin\"\n      :key = \"i\"\n      :to = \"link.to\"\n      active-class=\"primary white--text\"\n      >\n        <v-list-item-action>\n          <v-icon>{{link.icon}}</v-icon>\n        </v-list-item-action>\n\n        <v-list-item-title v-text=\"link.text\" />\n      </v-list-item>\n\n    </v-list>\n    <v-list nav v-else-if= \"user.isDepartmentManager ==='true'\">\n       <div />\n\n      <v-list-item\n      \n      v-for=\"(link, i) in linksManager\"\n      :key = \"i\"\n      :to = \"link.to\"\n      active-class=\"primary white--text\"\n      >\n        <v-list-item-action>\n          <v-icon>{{link.icon}}</v-icon>\n        </v-list-item-action>\n\n        <v-list-item-title v-text=\"link.text\" />\n      </v-list-item>\n      \n    </v-list>\n    <v-list nav v-else>\n       <div />\n\n      <v-list-item\n      \n      v-for=\"(link, i) in links\"\n      :key = \"i\"\n      :to = \"link.to\"\n      active-class=\"primary white--text\"\n      >\n        <v-list-item-action>\n          <v-icon>{{link.icon}}</v-icon>\n        </v-list-item-action>\n\n        <v-list-item-title v-text=\"link.text\" />\n      </v-list-item>\n      \n    </v-list>\n  </v-navigation-drawer>\n</template>\n\n<script>\n// Utilities\n  import {\n    mapMutations,\n    mapState\n  } from 'vuex'\n\n  export default {\n    props: {\n      opened: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data: () => ({\n      linksAdmin: [\n        {\n          to: '/user-profile',\n          icon: 'mdi-account',\n          text: 'User Profile'\n        },\n        {\n          to: '/roles',\n          icon: 'mdi-clipboard-outline',\n          text: 'Roles'\n        },\n        {\n          to: '/assetTypes',\n          icon: 'mdi-clipboard-outline',\n          text: 'AssetTypes'\n        },\n        {\n          to: '/purposes',\n          icon: 'mdi-clipboard-outline',\n          text: 'Purposes'\n        },\n        {\n          to: '/departments',\n          icon: 'mdi-clipboard-outline',\n          text: 'Departments'\n        },\n        {\n          to: '/employees',\n          icon: 'mdi-clipboard-outline',\n          text: 'Employees'\n        },\n        {\n          to: '/Assets',\n          icon: 'mdi-clipboard-outline',\n          text: 'Assets'\n        },\n      ],\n      linksManager: [\n        {\n          to: '/user-profile',\n          icon: 'mdi-account',\n          text: 'User Profile'\n        },\n        {\n          to: '/detailed-departments',\n          icon: 'mdi-clipboard-outline',\n          text: 'Departments'\n        },\n      ],\n      links: [\n        {\n          to: '/user-profile',\n          icon: 'mdi-account',\n          text: 'User Profile'\n        },\n        {\n          to: '/detailed-departments',\n          icon: 'mdi-clipboard-outline',\n          text: 'Departments'\n        },\n      ]\n    }),\n\n    computed: {\n      ...mapState('app', ['image', 'color']),\n      user(){\n        return this.$store.state.user\n      },\n      inputValue: {\n        get () {\n          return this.$store.state.app.drawer\n        },\n        set (val) {\n          this.setDrawer(val)\n        }\n      }\n    },\n    mounted(){\n      this.$store.dispatch(\"readUserProfile\", this.$store.state.user.id)\n      if(this.$store.state.user.isAdmin ==='false'){\n        this.$store.commit('changeDetailedDepartmentId', this.$store.state.user.departmentId)\n      }\n\n    },\n    created(){\n      \n      //console.log(\"In drawer created\")\n      //console.log(typeof(this.$store.state.user.isAdmin))\n      \n    },\n\n    methods: {\n      ...mapMutations('app', ['setDrawer', 'toggleDrawer'])\n    }\n  }\n</script>\n"]}]}